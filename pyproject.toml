[build-system]
requires = ["poetry-core>=1.0.5"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79

[tool.poetry]
name = "jedi-language-server"
version = "0.40.0"
description = "A language server for Jedi!"
authors = ["Sam Roeca <samuel.roeca@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/pappasam/jedi-language-server"
repository = "https://github.com/pappasam/jedi-language-server"
keywords = [
  "python",
  "completion",
  "refactoring",
  "vim",
  "neovim",
  "lsp",
  "language-server-protocol",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Code Generators",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Text Editors :: Integrated Development Environments (IDE)",
  "Topic :: Utilities",
  "Typing :: Typed",
]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.7,<4"
jedi = "^0.18.1"
pygls = "^1.0.1"
pydantic = ">=2.0,<3.0"
docstring-to-markdown = "0.*"
importlib-metadata = { version = "^3.10.1", python = "~3.7" }
lsprotocol = ">=2022.0.0a9"
typing-extensions = { version = "^4.5.0", markers = 'python_version < "3.10"' }

[tool.poetry.dev-dependencies]
pre-commit = ">=2.19.0"
tox = ">=3.25.1"
pytest = ">=7.1.2"
tox-asdf = ">=0.1.0"
toml-sort = ">=0.20.0"
isort = ">=5.10.1"
pylint = ">=2.13.9"
mypy = ">=0.961"
black = ">=22.6.0"
PyHamcrest = ">=2.0.3"
python-lsp-jsonrpc = "^1.0.0"
pytest-cov = ">=3.0.0"
docformatter = ">=1.4,!=1.5.1"

[tool.poetry.scripts]
jedi-language-server = 'jedi_language_server.cli:cli'

[tool.poetry.urls]
Changelog = "https://github.com/pappasam/jedi-language-server/blob/main/CHANGELOG.md"
Issues = "https://github.com/pappasam/jedi-language-server/issues"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{37,38,39,310,311}{,-cov}
isolated_build = true
skipsdist = true
[testenv]
platform = linux|darwin
whitelist_externals = poetry
skip_install = true
commands =
  poetry install

  !cov: poetry run black --check --diff jedi_language_server tests
  !cov: poetry run docformatter --check --recursive jedi_language_server tests
  !cov: poetry run isort --check jedi_language_server tests

  !cov: poetry run mypy jedi_language_server
  !cov: poetry run pylint jedi_language_server tests
  !cov: poetry run pytest tests

  cov: poetry run pytest --cov=jedi_language_server --cov-report=term-missing tests
"""
